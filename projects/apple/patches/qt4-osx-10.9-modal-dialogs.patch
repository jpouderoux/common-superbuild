diff -Nr -U5 qt-everywhere-opensource-src-4.8.6/src/gui/kernel/qeventdispatcher_mac.mm qt-everywhere-opensource-src-4.8.6.osx-10.9-modal-dialogs/src/gui/kernel/qeventdispatcher_mac.mm
--- qt-everywhere-opensource-src-4.8.6/src/gui/kernel/qeventdispatcher_mac.mm	2014-04-10 14:37:12.000000000 -0400
+++ qt-everywhere-opensource-src-4.8.6.osx-10.9-modal-dialogs/src/gui/kernel/qeventdispatcher_mac.mm	2015-12-02 12:25:38.581868803 -0500
@@ -607,10 +607,15 @@
                     // Someone called [NSApp stopModal:] from outside the event
                     // dispatcher (e.g to stop a native dialog). But that call wrongly stopped
                     // 'session' as well. As a result, we need to restart all internal sessions:
                     d->temporarilyStopAllModalSessions();
                 }
+
+                // Clean up the modal session list, call endModalSession.
+                if (d->cleanupModalSessionsNeeded) {
+                    d->cleanupModalSessions();
+                }
             } else {
                 d->nsAppRunCalledByQt = true;
                 QBoolBlocker execGuard(d->currentExecIsNSAppRun, true);
                 [NSApp run];
             }
@@ -631,10 +636,16 @@
                         // INVARIANT: Someone called [NSApp stopModal:] from outside the event
                         // dispatcher (e.g to stop a native dialog). But that call wrongly stopped
                         // 'session' as well. As a result, we need to restart all internal sessions:
                         d->temporarilyStopAllModalSessions();
                     }
+
+                    // Clean up the modal session list, call endModalSession.
+                    if (d->cleanupModalSessionsNeeded) {
+                        d->cleanupModalSessions();
+                    }
+
                     retVal = true;
                 } else do {
                     // Dispatch all non-user events (but que non-user events up for later). In
                     // this case, we need more control over which events gets dispatched, and
                     // cannot use [NSApp runModalSession:session]:
@@ -1042,11 +1053,11 @@
         CFRunLoopSourceSignal(d->postedEventsSource);
         return;
     }
 
 #ifdef QT_MAC_USE_COCOA
-    if (d->cleanupModalSessionsNeeded)
+    if (d->cleanupModalSessionsNeeded && d->currentExecIsNSAppRun)
         d->cleanupModalSessions();
 #endif
 
     if (d->interrupt) {
 #ifdef QT_MAC_USE_COCOA
